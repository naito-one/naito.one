@import './icons.scss';

.clickable {
  @apply cursor-pointer select-none outline-none;
}

.disabled {
  filter: contrast(0.5) brightness(170%) grayscale(0.7);
  cursor: not-allowed;
}

.hover-action {
  @apply select-none flex items-center justify-center;
}

.simple-action {
  @apply clickable flex items-center justify-center;
}

.action {
  @apply clickable flex items-center justify-center py-2 px-4 rounded-md font-semibold;
}

.inline-action {
  @apply clickable flex items-center py-3 pr-4 font-semibold;
}

.hover-action {
  &:hover:not(:disabled) {
    @apply shadow-lg lighten-5;
  }

  &:disabled {
    @apply disabled;
  }
}

.simple-action,
.action,
.inline-action {
  &:hover:not(:disabled) {
    @apply shadow-lg lighten-5;
  }

  &:active:not(:disabled) {
    @apply shadow-none darken-5;
  }

  &:disabled {
    @apply disabled;
  }

  &:focus:not(:disabled) {
    @apply shadow-outline;
  }
}

.yellow-link {
  text-decoration: underline;
  @apply text-naito-yellow-200;

  &:hover {
    @apply text-naito-yellow-100;
  }
}

.transparent-select {
  > select {
    @apply clickable block appearance-none bg-transparent pr-4;

    &:focus {
      @apply outline-none shadow-outline;
    }

    > option {
      @apply bg-gray-900;

      //prevent <option>s from becoming transparent on firefox
      &:not(:checked) {
        @apply text-gray-100;
      }
    }
  }

  &::after {
    content: 'arrow_drop_down';

    top: theme('spacing.5');
    right: theme('spacing.4');
    @apply material-icons-pseudo absolute pointer-events-none;
  }
}

// Range Slider

.range-slider__range {
  @apply bg-naito-green-200 w-full appearance-none h-4 rounded-lg outline-none p-0 m-0 mt-2;

  // Range Handle
  &::-webkit-slider-thumb {
    @apply w-6 h-6 rounded-full bg-gray-300 cursor-pointer appearance-none transition-background-100;

    &:hover {
      @apply bg-gray-200;
    }
  }

  &:active::-webkit-slider-thumb {
    @apply bg-gray-200;
  }

  &::-moz-range-thumb {
    @apply w-6 h-6 border-none rounded-full bg-gray-300 cursor-pointer appearance-none transition-background-100;

    &:hover {
      @apply bg-gray-200;
    }
  }

  &:active::-moz-range-thumb {
    @apply bg-gray-100;
  }

  // Focus state
  &:focus {
    &::-webkit-slider-thumb {
      box-shadow: 0 0 0 3px theme('colors.gray.900'),
        0 0 0 6px theme('colors.gray.100');
    }
  }
}

.title-on-click {
  @apply relative;
  &:hover::after {
    @apply absolute left-0 w-full bg-gray-800 text-gray-100 shadow-lg rounded-md p-4 mb-2;
    bottom: 100%;
    content: attr(title);
  }
}

.material-radio,
.material-checkbox {
  > .material-radio-fake,
  > .material-checkbox-fake {
    @apply p-2 cursor-pointer;
    &::after {
      content: 'check_box_outline_blank';

      @apply material-icons-pseudo pointer-events-none select-none text-xl;
    }
  }

  // other icon for the radio
  > .material-radio-fake::after {
    content: 'radio_button_unchecked';
  }

  > input {
    // display flex so it stopts taking place in the DOM
    // don't display: none because then it is not focusable
    // firefox: can't set widht/height for checkbox, so use transform
    transform: scale(0);
    // this makes sure it doesn't take space in the DOM
    @apply absolute;

    &:checked ~ .material-checkbox-fake::after {
      content: 'check_box';
    }

    // other icon for the radio
    &:checked ~ .material-radio-fake::after {
      content: 'radio_button_checked';
    }

    &:disabled ~ .material-radio-fake::after,
    &:disabled ~ .material-checkbox-fake::after {
      @apply disabled;
    }

    &:focus ~ .material-radio-fake::after,
    &:focus ~ .material-checkbox-fake::after {
      @apply shadow-outline;
    }
  }

  &:hover {
    @apply lighten-5;
  }

  &:active {
    @apply darken-5;
  }
}
